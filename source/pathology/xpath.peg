grammar Pathology.XPath
  
  location_path       <- location_step+ <Pathology.LocationPath>
  
  location_step       <- axis test:node_test? predicate:node_predicate?
                         <Pathology.LocationStep>
  
  axis                <- "/" axis_identifier <Pathology.Axis>
  
  axis_identifier     <- axis_name:[a-z\-]+ "::" / axis_shorthand
  
  axis_shorthand      <- "@" / ".." / "." / "/" / ""
  
  node_test           <- (node_condition / node_name / "*") <Pathology.NodeTest>
  
  node_condition      <- condition_name:[a-z\-]+ "()"
  
  node_name           <- [A-Za-z0-9\-]+
  
  node_predicate      <- "[" expression "]"
  
  expression          <- or_expression / and_expression / comparison / atom
  
  or_expression       <- left:and_expression "or" right:or_expression <Pathology.Or>
                       / and_expression
  
  and_expression      <- left:comparison "and" right:and_expression <Pathology.And>
                       / comparison
  
  comparison          <- left:atom comparator right:comparison <Pathology.Comparison>
                       / atom
  
  comparator          <- "!=" / "="
  
  atom                <- space expression:("(" in_parens:expression ")" / value) space
                         <Pathology.Atom>
  
  value               <- function_call / location_path / attribute / string
  
  function_call       <- function_name "(" function_args ")" <Pathology.FunctionCall>
  
  function_name       <- [a-z\-]+
  
  function_args       <- (first:expression rest:("," expression)*)?
  
  attribute           <- "@" node_name <Pathology.Attribute>
  
  string              <- ("'" ("\\" . / [^'])* "'" / "\"" ("\\" . / [^"])* "\"")
                         <Pathology.String>
  
  space               <- " "*

